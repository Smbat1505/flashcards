@import '@/styles/mixins';
@import '@/styles/function';

.container {
  position: relative;
  width: 100%;
  color: var(--color-dark-100);

  .label {
    @include typography(
      var(--font-size-s),
      var(--font-weight-regular),
      var(--line-height-m),
      var(--color-dark-100)
    );

    display: inline-block;
    padding-bottom: px-to-unit(8);
  }

  .inputWrapper {
    @include display-flex($align: center);

    position: relative;
    overflow: hidden;
    height: px-to-unit(36);
    border-radius: 2px;

    .input {
      @include border-with-color(var(--color-dark-300));
      @include typography(var(--font-size-m), var(--font-weight-regular), var(--line-height-m));

      width: 100%;
      height: 100%;
      padding: px-to-unit(8) px-to-unit(41);

      background-color: transparent;
      border-radius: 2px;
      box-sizing: border-box;
      outline: none;

      &:hover {
        @include border-with-color(var(--color-dark-100));

        color: var(--color-dark-100);
        background: var(--color-dark-700);
      }

      &:focus {
        @include border-with-color(var(--color-light-100));

        color: var(--color-light-100);
      }

      &:focus-visible,
      &:focus-within {
        @include border-with-color(var(--color-info-700));

        outline: 1px solid var(--color-info-700);
      }

      &.error {
        color: var(--color-danger-300);
        border: 1px solid var(--color-danger-300);
      }

      &:disabled {
        color: var(--color-dark-300);
        border: 1px solid var(--color-dark-300);

        &::placeholder {
          color: var(--color-dark-300);
        }

        &:hover {
          color: var(--color-dark-300);
          background-color: transparent;
          border: 1px solid var(--color-dark-300);
        }
      }
    }

    .SvgWrapper {
      position: absolute;
      box-sizing: content-box;
    }

    .svgIcons {
      @include screen-size(px-to-unit(20, 'em'), px-to-unit(20, 'em'));
    }

    .iconRight {
      @include display-flex;
      right: px-to-unit(10);
      color: var(--color-light-100);
    }

    .iconLeft {
      left: px-to-unit(12);
      width: px-to-unit(20);
    }

    .password {
      all: unset;
      cursor: pointer;
      right: px-to-unit(12);
    }

    .search {
      all: unset;
      left: px-to-unit(12);
    }

    .clear {
      all: unset;
      cursor: pointer;
      width: px-to-unit(16);
    }

    input:disabled ~ .svgIcons {
      pointer-events: none;
      color: var(--color-dark-300);
    }
    input:disabled ~ .iconRight {
      pointer-events: none;
      color: var(--color-dark-300);
    }

    input[type='search']:active ~ .search,
    input[type='search']:focus-visible ~ .SvgWrapper {
      color: var(--color-light-100);
    }

    input[type='search']::-webkit-search-cancel-button,
    input[type='search']::-webkit-search-decoration {
      display: none;
      appearance: none;
      background-color: transparent;
      outline: none;
    }

    input[type='password'] {
      padding: px-to-unit(8) px-to-unit(41);
    }
  }

  .errorText {
    @include typography(
      var(--font-size-xs),
      var(--font-weight-regular),
      var(--line-height-m),
      var(--color-danger-300)
    );

    padding: px-to-unit(7) 0;
  }

  .disabledText {
    color: var(--color-dark-300);
  }
}
